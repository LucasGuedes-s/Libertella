generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profissionais {
  id            Int        @id @default(autoincrement())
  nome          String
  email         String     @unique
  senha         String
  permissaoId   Int
  foto          String?    @db.VarChar(2048)
  especialidade String
  processo      Int?
  permissao     Permissoes @relation(fields: [permissaoId], references: [id])
  processos     Processo?  @relation(fields: [processo], references: [id])
}

model Ocorrencias {
  id              Int        @id @default(autoincrement())
  tipo_denuncia   String
  tipo_violencia  String
  agressor        String
  provas          String[]   @db.VarChar(2048)
  descricao       String
  local           String?
  data_denuncia   DateTime?  @db.Date
  data_ocorrencia String
  status          String @default("Andamento") // Adicionando um valor padrão
  ocorrencias     Processo[]
}

model Processo {
  id            Int             @id @default(autoincrement())
  status        String?
  ocorrencia    Int?
  registro      Int?
  ocorrecia     Ocorrencias?    @relation(fields: [ocorrencia], references: [id])
  registros     Registro?       @relation(fields: [registro], references: [id])
  profissionais Profissionais[]
}

model Registro {
  id         Int        @id @default(autoincrement())
  anexos     String[]   @db.VarChar(2048)
  descricoes String?
  data       String?
  processos  Processo[]
}

model Permissoes {
  id            Int             @id @default(autoincrement())
  descricao     String?
  profissionais Profissionais[]
}

model Chat {
  id         String   @id @default(uuid()) // ID único do chat
  criadoEm   DateTime @default(now())     // Data de criação do chat
  clienteId  String   // ID do cliente no socket
  adminId    String?  // ID do administrador que aceitou o chat
  mensagens  Json     // Armazena todas as mensagens como JSON
}
